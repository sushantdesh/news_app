{"version":3,"sources":["Components/Newsitem.js","Components/News.js","Components/Header.js","Components/Filter.js","App.js","serviceWorker.js","index.js"],"names":["Newsitem","Card","this","props","article","multimedia","Img","src","url","Body","Title","style","cursor","href","title","Subtitle","className","section","subsection","Text","abstract","Footer","Moment","published_date","fromNow","React","Component","News","getStyle","border","padding","background","margin","width","borderRadius","newsarticles","map","Header","textAlign","Filter","getbuttonstyle","selectedCountry","onClick","category","bind","App","state","r","console","log","fetch","then","res","json","data","setState","newsfromapi","catch","status","results","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.2fd996c2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport Moment from 'moment'\r\n\r\nclass Newsitem extends React.Component{\r\n\r\n\r\n    render() {\r\n\r\n        return(\r\n<div >\r\n\r\n    <Card>\r\n        {this.props.article.multimedia?\r\n        <Card.Img  src={this.props.article.multimedia[0].url} />\r\n        : null}\r\n        <Card.Body>\r\n            <Card.Title style={{cursor:'pointer'}}><a href={this.props.article.url}>{this.props.article.title}</a></Card.Title>\r\n            <Card.Subtitle  className=\"mb-2 text-muted\" >{this.props.article.section} {' '}{this.props.article.subsection}</Card.Subtitle>\r\n            <Card.Text>\r\n                {this.props.article.abstract}\r\n            </Card.Text>\r\n        </Card.Body>\r\n        <Card.Footer>\r\n            <small className=\"text-muted\"> {Moment(this.props.article.published_date).fromNow()} </small>\r\n        </Card.Footer>\r\n    </Card>\r\n\r\n    {/*        <h2>{this.props.article.title}</h2>*/}\r\n    {/*<h3>from {this.props.article.source.name}</h3>*/}\r\n\r\n    {/*{this.props.article.urlToImage ? <img src={this.props.article.urlToImage} alt=\"image not loaded\" style={{maxWidth:\"30%\"}}/> : null}*/}\r\n    {/*{this.props.article.author ? <p><p>author :{this.props.article.author}</p>*/}\r\n    {/*    <p> published at : {this.props.article.publishedAt}</p> </p>:*/}\r\n    {/*    <p>published at : {this.props.article.publishedAt}</p>}*/}\r\n    {/*<p>{this.props.article.description}</p>*/}\r\n\r\n    {/*<p>{this.props.article.content}</p>*/}\r\n</div>\r\n        )\r\n    }\r\n}\r\nexport default Newsitem;","import React from \"react\";\r\nimport Newsitem from \"./Newsitem\";\r\nimport CardsColumn from 'react-bootstrap/CardColumns'\r\nimport Card from \"react-bootstrap/Card\";\r\nclass News extends React.Component{\r\n    getStyle= {\r\n        border: '3px solid green',\r\n        padding: '10px',\r\n        background: 'white',margin:'auto',width:'70%',\r\n        borderRadius:'20px'\r\n\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <CardsColumn>\r\n                {this.props.newsarticles.map((article)=>{\r\n                    return <Newsitem article={article}></Newsitem>\r\n                })}\r\n            </CardsColumn>\r\n        )\r\n        // return this.props.newsarticles.map((article)=>(\r\n        //\r\n        //\r\n        //     // <div style={this.getStyle}>\r\n        //     // <Newsitem article={article}/>\r\n        //     //     {'  '}\r\n        //     // </div>\r\n        // ))\r\n    }\r\n}\r\nexport default News;","import React from \"react\";\r\n\r\nfunction Header(){\r\n    return(\r\n        <h1 style={{textAlign:'center'}}>News App in React</h1>\r\n    )\r\n}\r\nexport default Header;","import React from \"react\";\r\n\r\nclass Filter extends React.Component{\r\n        getStyle= {\r\n            textAlign:'center',\r\n    border: '3px solid green',\r\n    padding: '10px',\r\n    background: 'f8f8ff',margin:'auto',width:'100%',\r\n            borderRadius: '10px'\r\n}\r\ngetbuttonstyle={\r\n            borderRadius:'12px',\r\n            background: 'lightblue',\r\n            cursor:'pointer'\r\n}\r\nselectedCountry='R'\r\n    render() {\r\n        return(\r\n           <div style={this.getStyle}>\r\n               <button style={this.getbuttonstyle} onClick={this.props.category.bind(this,'home.json')}>Home</button> {' '}\r\n               <button style={this.getbuttonstyle} onClick={this.props.category.bind(this,'arts.json')}>Arts</button>{' '}\r\n               <button style={this.getbuttonstyle} onClick={this.props.category.bind(this,'books.json')}>Books</button>{' '}\r\n               <button style={this.getbuttonstyle} onClick={this.props.category.bind(this,'business.json')}>Business</button>{' '}\r\n               <button style={this.getbuttonstyle} onClick={this.props.category.bind(this,'fashion.json')}>Fashion</button>{' '}\r\n               <button style={this.getbuttonstyle} onClick={this.props.category.bind(this,'food.json')}>Food</button>{' '}\r\n               <button style={this.getbuttonstyle} onClick={this.props.category.bind(this,'health.json')}>Health</button> {'  '}\r\n               <button style={this.getbuttonstyle} onClick={this.props.category.bind(this,'magazine.json')}>Magazine</button> {'  '}\r\n               <button style={this.getbuttonstyle} onClick={this.props.category.bind(this,'movies.json')}>Movies</button> {'  '}\r\n               <button style={this.getbuttonstyle} onClick={this.props.category.bind(this,'nyregion.json')}>NYregion</button> {'  '}\r\n               <button style={this.getbuttonstyle} onClick={this.props.category.bind(this,'opinion.json')}>Opinion</button> {'  '}\r\n               <button style={this.getbuttonstyle} onClick={this.props.category.bind(this,'politics.json')}>Politics</button> {'  '}\r\n               <button style={this.getbuttonstyle} onClick={this.props.category.bind(this,'science.json')}>Science</button> {'  '}\r\n               <button style={this.getbuttonstyle} onClick={this.props.category.bind(this,'sports.json')}>Sports</button> {'  '}\r\n               <button style={this.getbuttonstyle} onClick={this.props.category.bind(this,'technology.json')}>Technology</button> {'  '}\r\n\r\n\r\n\r\n\r\n           </div>\r\n        )\r\n    }\r\n}\r\nexport default Filter;","import React from 'react';\nimport News from './Components/News.js'\nimport Header from \"./Components/Header\";\nimport Filter from \"./Components/Filter\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nclass App extends React.Component{\n    state={}\n\n  componentDidMount() {\n    fetch('https://api.nytimes.com/svc/topstories/v2/home.json?api-key=zPDAP29ogOhQeNqE7vCK4hrH5TQlvfWQ')\n        .then(res=>res.json())\n        .then((data)=>{\n            console.log(\"didmount\")\n          this.setState(({newsfromapi:data}))\n        })\n        .catch()\n  }\n  category=(r)=>{\n        console.log(r)\n        let baseurl='https://newsapi.org/v2/top-headlines?country=us&'\n      let apikey='&apiKey=29bae5c10b734c0e98ec58a6d640b817'\n      let complete=baseurl+r+apikey\n\n      fetch(`https://api.nytimes.com/svc/topstories/v2/${r}?api-key=zPDAP29ogOhQeNqE7vCK4hrH5TQlvfWQ`)\n          .then(res=>res.json())\n          .then((data)=>{\n              this.setState({newsfromapi:data})\n          })\n          .catch()\n\n}\n\n  render() {\n      console.log(\"here\", this.state.newsfromapi);\n\n      return (\n          <div >\n              <Header/>\n              <Filter category={this.category}/>\n\n              {this.state.newsfromapi && this.state.newsfromapi.status===\"OK\" ?\n                  <News newsarticles={this.state.newsfromapi.results}/>: <div>\n                      <h1> Waiting...</h1>\n                      <h5> This might be because of Nytimes API-limitations, 4000 calls per day, max 10 calls per min..\n                          wait for 30 secs and refresh.. </h5>\n\n                  </div>}\n\n\n          </div>\n\n      );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}